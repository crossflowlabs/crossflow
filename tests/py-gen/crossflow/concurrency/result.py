from typing import Union


from crossflow.runtime import Job
from crossflow.concurrency.sleep_time import SleepTime


class Result(SleepTime):
    """NOTE: Auto-generated by Type2Class on 2022-01-05T17:43:30.820254Z
    Do not edit this class manually
    """

    def __init__(self,
        completed: bool = None,
        seconds: int = None,
        correlation_id: Union["Result", Job, str] = None
    ):
        super().__init__(correlation_id=correlation_id)
        self._completed = completed        
        self._seconds = seconds        

    @property
    def completed(self) -> bool:
        return self._completed

    @completed.setter
    def completed(self, completed: bool):
        self._completed = completed

    def __str__(self):
        return f"Result ( completed={str(self.completed)}, job_id={str(self.job_id)}, correlation_id={str(self.correlation_id)}, destination={str(self.destination)} )"
